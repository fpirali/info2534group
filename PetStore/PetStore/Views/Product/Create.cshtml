@model PetStore.Models.ProductModels

@{
    ViewBag.Title = "Create";
}

<h2>New Product</h2>

@*20180827 using our custom html helpers*@
@using PetStore.Helpers

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Are we missing something? Fill out the form below to add a new product to the store.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
           
        @*20180827 added fields for category, price, image url, and sale (Y/N) radio buttons - kelsey*@
        <div class="form-group">
            @Html.LabelFor(model => model.Pet.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            @*@Html.Raw(Html.DescriptionFor(model => model.Category.Name, htmlAttributes: new { @class = "control-label col-md-2" }))*@
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.PetId, Model.Pets, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.EditorFor(model => model.Category.Name, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Pet.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Category.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            @*@Html.Raw(Html.DescriptionFor(model => model.Category.Name, htmlAttributes: new { @class = "control-label col-md-2" }))*@
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.EditorFor(model => model.Category.Name, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Category.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.OnSale, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @Html.Raw(Html.DescriptionFor(model => model.OnSale, htmlAttributes: new { @class = "control-label col-md-2" }))
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.OnSale, new { htmlAttributes = new { @class = "form-control" }})
                @*@Html.RadioButtonFor(model => model.OnSale, new {  htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.OnSale, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Markdown, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Markdown, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Markdown, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageFilePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageFilePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageFilePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
